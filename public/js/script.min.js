const socket=io("/"),CONFIG={iceServers:[{urls:"stun:stun.stunprotocol.org"}]},peer1=new RTCPeerConnection(CONFIG),peer2=new RTCPeerConnection(CONFIG),message=document.querySelector("input[name='message']"),invite=document.querySelector("button#invite"),video=document.querySelector("button#video"),audio=document.querySelector("button#audio"),msgContainer=document.querySelector("#message-container"),messages=document.querySelector("#messages"),remoteVideo=document.querySelector("#remoteVideo");let myVideoStream,newUser;window.addEventListener("resize",()=>{window.innerWidth>1190&&msgContainer.removeAttribute("style")}),document.querySelector("button#send").addEventListener("click",()=>{0!==message.value.trim().length&&(socket.emit("message",message.value.trim()),message.value="")}),message.addEventListener("keydown",e=>{"Enter"==e.key&&0!==message.value.trim().length&&(socket.emit("message",message.value.trim()),message.value="")}),invite.addEventListener("click",()=>{prompt("Copy this link and send it to people you want to meet with:",location.href)}),document.querySelector("button#chat").addEventListener("click",()=>{msgContainer.style.display="flex"}),document.querySelector("button#back").addEventListener("click",()=>{msgContainer.style.display="none"}),video.addEventListener("click",()=>{const enabled=myVideoStream.getVideoTracks()[0].enabled;enabled?(myVideoStream.getVideoTracks()[0].enabled=!1,video.innerHTML='<i class="fas fa-video-slash"></i>'):(myVideoStream.getVideoTracks()[0].enabled=!0,video.innerHTML='<i class="fas fa-video"></i>'),video.classList.toggle("bg-red")}),audio.addEventListener("click",()=>{const enabled=myVideoStream.getAudioTracks()[0].enabled;enabled?(myVideoStream.getAudioTracks()[0].enabled=!1,audio.innerHTML='<i class="fas fa-microphone-slash"></i>'):(myVideoStream.getAudioTracks()[0].enabled=!0,audio.innerHTML='<i class="fas fa-microphone"></i>'),audio.classList.toggle("bg-red")}),socket.on("connect",()=>{navigator.mediaDevices.getUserMedia({audio:!0,video:!0}).then(stream=>{myVideoStream=stream,document.querySelector("#localVideo").srcObject=stream,stream.getTracks().forEach(track=>peer1.addTrack(track,stream)),prompts(),socket.emit("requestMessages")}).catch(err=>alert(err))});const prompts=()=>{if(""==document.querySelector("#video-container h2").innerText){let room="";for(;null==room||0==room.trim().length;)room=prompt("Please enter the name of this room","Room-1");let username=localStorage.getItem("username"),valid=!1;if(localStorage.getItem("username")){if(!confirm("Do you wish to keep your username?"))for(;!valid;)username=prompt("Please enter your new username",localStorage.getItem("username")),null!=username&&username.trim().length>0&&(valid=!0)}else for(;!valid;)username=prompt("Please enter your username","john-smith"),null!=username&&username.trim().length>0&&(valid=!0);localStorage.setItem("username",username.replace(new RegExp(" ","g"),"-")),location.pathname+=room.replace(new RegExp(" ","g"),"-")}else socket.emit("joinRoom",ROOM,localStorage.getItem("username")),socket.emit("requestUserList")};socket.on("roomFull",()=>{alert("This room is full"),location.pathname="/"}),socket.on("updateUserList",async({users:users})=>{let usersInRoom=users.filter(user=>user.room===ROOM);2==usersInRoom.length?(invite.disabled=!0,remoteVideo.removeAttribute("style"),newUser=usersInRoom.filter(user=>user.id!==socket.id)[0],await addUser()):usersInRoom.length>2?socket.emit("removeUser",usersInRoom[usersInRoom.length-1]):(invite.disabled=!1,remoteVideo.style.display="none")});const addUser=async()=>{const localPeerOffer=await peer1.createOffer();await peer1.setLocalDescription(localPeerOffer),socket.emit("mediaOffer",{offer:localPeerOffer,from:socket.id,to:newUser.id})};socket.on("mediaOffer",async data=>{try{await peer2.setRemoteDescription(data.offer);const peerAnswer=await peer2.createAnswer();await peer2.setLocalDescription(peerAnswer),socket.emit("mediaAnswer",{answer:peerAnswer,from:socket.id,to:data.from})}catch(err){console.error(err)}}),socket.on("mediaAnswer",async data=>{await peer1.setRemoteDescription(data.answer)});const onIceCandidateEvent=e=>{socket.emit("iceCandidate",{to:newUser.id,candidate:e.candidate})};peer1.onicecandidate=onIceCandidateEvent,peer2.onicecandidate=onIceCandidateEvent,socket.on("remotePeerIceCandidate",async data=>{try{await peer1.addIceCandidate(new RTCIceCandidate(data.candidate)),await peer2.addIceCandidate(new RTCIceCandidate(data.candidate))}catch(err){console.error(err)}}),peer2.addEventListener("track",e=>{const[stream]=e.streams;remoteVideo.srcObject=stream}),socket.on("getMessages",({userMessages:userMessages})=>{userMessages.filter(obj=>obj.room==ROOM).forEach(obj=>addMessage(obj.userId,socket.id,obj.username,obj.message))});const addMessage=(userId,socketId,username,message)=>{const messageEl=document.createElement("div");messageEl.className="message";const bUserInfo=document.createElement("b");bUserInfo.id="user-info";const icon=document.createElement("i");icon.className="far fa-user-circle",bUserInfo.append(icon,userId==socketId?"me":username),messageEl.append(bUserInfo);const spanMessage=document.createElement("span");spanMessage.append(message),messageEl.append(spanMessage),messages.append(messageEl)};socket.on("createMessage",(message,userId,username)=>{addMessage(userId,socket.id,username,message)});